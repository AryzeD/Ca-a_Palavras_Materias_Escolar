<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iZf8P4cpgyjcxy9sAAAAAElFTkSuQmCC
</value>
  </data>
</root>